# name columns/rows
days <- c('Mon', 'Tue', 'Wed', 'Thu', 'Fri')
st.names <- c('GOOG', 'MSFT')
colnames(stock.matrix) <- days
rownames(stock.matrix) <- st.names
print(stock.matrix)
mat <- matrix(1:25, byrow = T, nrow = 5)
mat
mat * 2
mat /2
mat ^ 2
1/mat
mT > 1
mat > 15
mat[mat>15]
mat + mat
mat ^ mat
mat * mat
mat
mat * mat
mat %*% mat
colSums(stock.matrix)
stock.matrix
rowSums(stock.matrix)
rowMeans(stock.matrix)
FB <- c(112, 113, 143, 120, 124)
tech.stock <- rbind(stock.matrix, FB)
tech.stock
avg <- rowMeans(tech.stock)
avg
tech.stock <- cbind(tech.stock, avg)
tech.stock
v <- c(1, 2, 3, 4, 5)
v[2]
mat <- matrix(1:50, byrow = T, nrow = 5)
mat
mat[1, ]
mat[, 1]
mat[1:3,]
mat[1:2, 1:3]
mat[, 9:10]
mat[2:3, 5:6]
mat[4:6, 4:6]
mat[4:5, 4:6]
animal <- c('d', 'c', 'd', 'c', 'c')
animal
id <- c(1, 2, 3, 4, 5)
id
factor(animal)
fact.ani <- factor(animal)
ord.cat <- c('cold', 'med', 'hot')
temps <- c('cold', 'med', 'hot', 'hot', 'hot', 'cold', 'med')
fact.temps <- factor(temps, ordered = T, levels = c('cold', 'med', 'hot'))
fact.temps
summary(fact.temps)
summary(tempdir())
summary(temps)
fact.ani
fact.temps <- factor(temps, ordered = T, levels = c('med', 'col', 'hot'))
summary(fact.temps)
fact.temps <- factor(temps, ordered = T, levels = c('med', 'cold', 'hot'))
summary(fact.temps)
help("factor")
categories <- c("A", "B", "A", "C", "B", "C")
factor_variable <- factor(categories)
factor_variable
str(factor_variable)
factor_variable <- factor(categories, levels = c("C", "A", "B"))
factor_variable
factor_variable <- factor(categories, levels = c("A", "B"))
factor_variable
summary(factor_variable)
rm(list = ls())
A <- c(1, 2, 3)
B <- c(4, 5, 6)
new.matrix <- rbind(A, B)
new.matrix
3.by.3.matrix <- matrix(1:9, byrow = F, nrow = 2)
another.matrix <- matrix(1:9, byrow = F, nrow = 2)
another.matrix <- matrix(1:9, byrow = F, nrow = 2)
another.matrix <- matrix(1:9, byrow = F, nrow = 3)
another.matrix
is.matrix(another.matrix)
mat2 <- matrix(1:25, byrow = T, nrow = 5)
mat2
mat2[2:3, 2:3]
mat2 <- matrix(1:25, byrow = T, nrow = 5)
mat2[4:5, 4:5]
sum(mat2)
Sum(mat2)
help(runif)
runif(20, min = 4, max = 5)
runif(20)
runif(20, min = 1, max = 20)
random.matrix <- matrix(runif(4 * 5), nrow = 4, ncol = 5)
random.matrix
random.matrix <- matrix(runif(20), nrow = 4, ncol = 5)
random.matrix
runif(20)
runif(20, min = 0, max = 100)
matrix(runif(20), nrow = 4)
rm(list = ls())
state.x77
USPersonalExpenditure
women
data()
WorldPhones
state.x77
head(state.x77)
tail(state.x77)
tail(women)
faithful
ldeaths
quakes
tail(quacked)
tail(quackes)
tail(quakes)
str(state.x77)
summary(state.x77)
days <- c('Mon', 'Tue', 'Wed', 'Thu', 'Fri')
temps <- c(22, 28, 27, 24, 25, 21)
rain <- c(T, T, F, F, T)
data.frame(days, temp, rain)
data.frame(days, temps, rain)
rm(temps)
temp <- c(28, 27, 26, 23, 24)
data.frame(days, temp, rain)
df <- data.frame(days, temp, rain)
str(df)
summary(df)
df
df[1,]
df[,1]
df[,'rain']
df[1:5, c('days', 'temp')]
df$days
df$temp
df['days']
subset(df, subset = rain == T)
subset(df, subset = temp>23)
sorted.temp <- order(df['temp'])
sorted.temp <- order(df['temp'])
help("order")
sorted.temp <- order(df$temp)
sorted.temp
temp
df[sorted.temp,]
desc.temp <- order(-df['temp'])
desc.temp <- order(-df$temp)
desc.temp
df[desc.temp, ]
rm(list = ls())
empty <- data.frame()
c1 <- 1:10
c1
letters
c2 <- letters
c2 <- letters[1:10]
c1
c2
df <- data.frame(col.name.1 = c1, col.name.2 = c2)
df
write.csv(df, file = 'saved_df.csv')
df2 <- read.csv('saved_df.csv')
df 2
df2
df
df
nrow(df)
ncol(df)
colnames(df)
rownames((df))
rownam
rownames(df)
str(df)
summary(df)
summary(df)
df[[5, 2]]
df[[5, 'col.name.2']]
df[[2, 'col.name.1']] <- 9999
df
df[1, ]
df[1, ]
emptycards
mtcards
mtcars
head(mtcards)
head(mtcars)
mtcars$mpg
mtcars[, 'mpg']
mtcars[, 1]
mtcars[['mpg']]
mtcars['mpg']
mtcars[1]
mtcars[c('mpg', 'cy')]
head(mtcars[c('mpg', 'cy')])
head(mtcars[c('mpg', 'cyl')])
df[[5, 2]]
df[1, ]
df[[5, 'col.name.2']]
df[1, ]
df <- data.frame(col.name.1 = 2000, col.name.2 = 'new')
df
df <- data.frame(col.name.1 = c1, col.name.2 = c2)
df
df <- data.frame(col.name.1 = c1, col.name.2 = c2)
df
df2 <- data.frame(col.name.1 = 2000, col.name.2 = 'new')
df2
dfnew <- rbind(df, df2)
dfnew
df$newcol <- 2*df$col.name.1
df
df
df$newcol.copy <- df$newcol
head(df)
df[, 'newcol.copy2'] <- df$newcol
df
colnames(df)
colnames(df) <- c('1', '2', '3', '4', '5')
head(df\)
head(df)
colnames(df)[1] <- 'NEW COL NAME'
df
df[1:10, ]
df[1:3, ]
head(df)
head(df, 7)
head(df)
df[-2, ]
head(mtcars)
mtcars[mtcars$mpg > 20]
mtcars[mtcars$mpg > 20, ]
head(mtcars)
mtcars[mtcars$mpg > 20 & mtcars$cyl == 6, ]
mtcars[mtcars$mpg > 20 & mtcars$cyl == 6, c('mog', 'cyl', 'hp')]
mtcars[mtcars$mpg > 20 & mtcars$cyl == 6, c('mpg', 'cyl', 'hp')]
subset(mtcars, mpg > 20 & cyl == 6)
mtcars
head(mtcars)
mtcars[, c(1, 2, 3)]
mtcars[, c('mpg', 'cyl', )]
mtcars[, c('mpg', 'cyl' )]
Na
NA
is.NA(mtcars)
is.na(mtcars)
any(is.na(df))
any(is.na(mtcars$mpg))
df[is.na(df)] <- 0
df
mtcars$mpg[ is.na(mtcars$mpg)] <- mean(mtcars$mpg)
mtcars
age <- c(22, 25, 26)
weight <- c(150, 165, 120)
sex <- c(M, M, F)
sex <- c('M', 'M', 'F')
rm(list = ls())
sam <- c(22, 150, 'M')
frank <- c(25, 165, 'M')
amy <- c(26, 120, 'F')
df <- dataframe(age = sam, weight = frank, sex = amy)
c1 <- 1:10
c2 <- letters[1:10] #  built-in vector for the letters of the alphabet
df <- data.frame(col.name.1 = c1, col.name.2 = c2) # if no names, columns will be named by the variables
df
c1
c2
sam
df
df <- data.frame(age, weight, height)
df <- data.frame(amy, weight, setTxtProgressBar()
df
rm(list = ls ())
age <- c(22, 25, 120)
weight <- c(150, 165, 120)
sex <- c('M', 'M', 'F')
df <- data.frmae(age, weight, amy)
df <- data.frame(age, weight, amy)
df <- data.frame(age, weight, sex)
sd
df
rownames
rownames(df)
rownames(df) <- c('sam', 'frank', 'amy')
df
is.data.frame(mtcars)
as.data.frame()
mat <- matrix(1:25, nrow = 5)
mat
help("as.data.frame")
df.matrix <- as.data.frame(mat)
df.matrix
df2 <- mtcars
head(df3)
head(df2)
mean(df2$mpg)
df2[, mtcars$cyl == 6]
df2[ mtcars$cyl == 6, ]
mtcars[, c('mpg', 'gear', carb)]
mtcars[, c('mpg', 'gear', 'carb'')]
mtcars[, c('mpg', 'gear', 'carb')]
mtcars[, c('mpg', 'gear', 'carb')]
df$new.column <- df$hp / df$wt
df$new.column <- df$hp/wt
df2$new.column <- df2$hp / df2$wt
head(df2)
help(rounf)
help("round")
df2$new.column <- round(df2$new.column)
head(df2)
df2$new.column <- round(df2$new.column, 2)
head(df2)
df2$new.column <- df2$hp / df2$wt
head(df2)
df2$new.column <- round(df2$new.column, 2)
head(df2)
average <- mean(subset(df2, mpg > 100 & wt > 2.5))
average <- mean(df2[df2$mpg > 100 & df2$wt > 2.5), ])
average <- mean(df2[df2$mpg > 100 & df2$wt > 2.5, ])
df2['Hornet Sportabout'][mpg]
df2['Hornet Sportabout']['mpg']
subset(df, hp > 100 & wt > 2.5)
subset(df2, hp > 100 & wt > 2.5)
mean(subset(df2, hp > 100 & wt > 2.5)$mpg)
df2[df$hp > 100 & df$wt > 2.5, ]$mpg
df2[df2$hp > 100 & df2$wt > 2.5, ]$mpg
mean(df2[df2$hp > 100 & df2$wt > 2.5, ]$mpg)
df2['Hormet Sportabout', ]
df2
df2['Hornet Sportabout',]$mpg
df2['Hornet Sportabout',]
df2['Hornet Sportabout',]$mpg
v <- c(1, 2, 3,)
v <- c(1, 2, 3)
rm(list = ls())
v <- c(1, 2, 3)
m <- matrix(1:10, nrow = 2)
df <- mtcars
class(v)
class(m)
class(df)
my.list <- list(v, m , df)
my.list
my.names.list <- list(sample.vec = v, my.matrix = m, sample.df = df)
my.named.list <- list(sample.vec = v, my.matrix = m, sample.df = df)
my.names.list
my.named.list
my.named.list$sample.df
my.list[1]
my.named.list[1]
my.named.list['sample.vec']
class(my.named.list['sample.vec'])
my.named.list$sample.vec
class(my.named.list$sample.vec)
my.named.list[['sample.vec']]
double.list <- c(my.named.list, my.named.list)
double.list
str(my.named.list)
Sys.getenv("JAVA_HOME")
library(rJava)
::.javaGD()
head(mtcars)
library(writexl)
install.packages('writexl')
library(writexl)
help(writexl)
write_xlsx(mtcars, 'batai_de_cap.xlsx')
head('batai_de_cap.xlsx')
installed.packages('RPostgreSQL')
install.packages('RPostgreSQL')
library(RPostgreSQL)
help(RPostgresSQL)
?RPostgresSQL
??RPostgresSQL
install.packages('rvest')
library(rvest)
demo(package = 'rvest')
demo(package = 'rvest', topic = 'tripadvisor')
Return
demo(package = 'rvest', topic = 'unitedd')
demo(package = 'rvest', topic = 'united')
x < 20 & x > 5
z <- 10
x <- 10
x < 20 & x > 5
rm(list = ls())
T & F
x <- 10
x == 10 | x == 100
!(10 == x)
!!!(10 == x)
!!(10 == x)
df <- mtcars
df[df$mpg > 20, ]
subset(df, mpg > 20)
df[ (df$mpg > 20) & (df$hp > 100), ]
df[ (df$mpg > 20) | (df$hp > 100), ]
if (x == 10){
# code to execute
print('X is equal to 10!')
}
source("~/Desktop/github R course/5. Programming_basics.R", echo=TRUE)
if (x % 2 == 1){
if (x %% 2 == 1){
print('even number')
}else{
print('odd number')
}
help(is.matrix)
source("~/Desktop/github R course/5. Programming_basics.R", echo=TRUE)
source("~/Desktop/github R course/5. Programming_basics.R", echo=TRUE)
x <- c(1, 3, 7)
if (x[1] > x[2] & x[2] > x[3]){
print(x[1], x[2], x[3])
}
x <- matrix() # empty matrix
if (is.matrix(x)){
print("x is a matrix")
}else{
print('not a matrix')
}
x <- c(3, 7, 1)
if (x[1] > x[2]){
# first and second place
first <- x[1]
second <- x[2]
}else{
first <- x[2]
second <- x[1]
}
if (x[3] > first & x[3] > second){
# 3rd was the largest
third <- second
second <- first
first <- x[3]
}else if (x[3] < first & x[3] < second){
# 3rd was the smallest
third <- x[3]
}else{
# goes in the middle
third <- second
second <- x[3]
}
print(paste(fir, sec, thi)) # paste together 3 variables
source("~/Desktop/github R course/5. Programming_basics.R", echo=TRUE)
x <- c(20, 10, 1)
if (x[1] > x[2] & x[1] > x[3]){
print(x[1])
}else if (x[2] > x[3]){
print(x[2])
}else{
print(x[3])
}
x <- c(20, 100, 1)
if (x[1] > x[2] & x[1] > x[3]){
print(x[1])
}else if (x[2] > x[3]){
print(x[2])
}else{
print(x[3])
}
source("~/Desktop/github R course/5. Programming_basics.R", echo=TRUE)
x <- 0
while (x < 10){
print(paste0('x is: ', x)) # concatenate the input values in a single character string
x <- x + 1
if (x == 10){
print('x is not equal to 10, break loop')
}
}
source("~/Desktop/github R course/5. Programming_basics.R", echo=TRUE)
source("~/Desktop/github R course/5. Programming_basics.R", echo=TRUE)
source("~/Desktop/github R course/5. Programming_basics.R", echo=TRUE)
for (temp.var in v){
# execute for every temporary variable in v
print(temp.var)
}
v <- c(1, 2, 3, 4, 5)
for (variable in v){
print(variable)
}
for (temp.var in v){
# execute for every temporary variable in v
print('hello')
}
source("~/Desktop/github R course/5. Programming_basics.R", echo=TRUE)
source("~/Desktop/github R course/5. Programming_basics.R", echo=TRUE)
source("~/Desktop/github R course/5. Programming_basics.R", echo=TRUE)
1 : nrow(mat))
1 : nrow(mat)
source("~/Desktop/github R course/5. Programming_basics.R", echo=TRUE)
source("~/Desktop/github R course/5. Programming_basics.R", echo=TRUE)
sum(c(2, 4, 6))
source("~/Desktop/github R course/5. Programming_basics.R", echo=TRUE)
source("~/Desktop/github R course/5. Programming_basics.R", echo=TRUE)
source("~/Desktop/github R course/5. Programming_basics.R", echo=TRUE)
source("~/Desktop/github R course/5. Programming_basics.R", echo=TRUE)
source("~/Desktop/github R course/5. Programming_basics.R", echo=TRUE)
source("~/Desktop/github R course/5. Programming_basics.R", echo=TRUE)
source("~/Desktop/github R course/5. Programming_basics.R", echo=TRUE)
source("~/Desktop/github R course/5. Programming_basics.R", echo=TRUE)
times5 <- function(num){
my.result <- num * 5
return(my.result)
}
my.output <- times5(100)
print(my.output)
my.output
my.result
source("~/Desktop/github R course/5. Programming_basics.R", echo=TRUE)
source("~/Desktop/github R course/5. Programming_basics.R", echo=TRUE)

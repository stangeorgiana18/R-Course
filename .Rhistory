help(strptime)
strptime("19:40:19", format = "%H:%M:%S")
rm(list = ls())
install.packages('dyplr')
install.packages('dplyr')
install.packages('nycflights13')
library(dplyr)
library(nycflights13)
head(flights)
summary(fligths)
summary(flighy)
summary(flights)
head(filter(flights, month == 11, day == 3, carrier == 'AA'))
head(flights[flights$month == 11 & flights$day == 3 & flights$carrier == 'AA', ])
slice(flights, 1:10)
head(arrange(flights, year, month, day, air_time))
head(arrange(flights, year, month, day, arr_time))
head(arrange(flights, year, month, day, desc(arr_time))
head(arrange(flights, year, month, day, desc(arr_time)))
head(select)
head(select(flights, carrier))
head(select(flights, carrier, arr_time))
head(select(flights, carrier, arr_time, month))
head(rename(flights, airline_carrier = carrier))
distinct(select(flights, carrier))
head(mutate(flights, new_col = arr_delay - dep_delay))
head(tranmute(flights, new_col = arr_delay - dep_delay))
head(transmute(flights, new_col = arr_delay - dep_delay))
summarise(flights, avg_air_time = mean(air_time, na.rm = TRUE))
summarise(flights, total_air_time = sum(air_time, na.rm = TRUE))
sample_n(flights, 10)
sample_frac(flights, 0.1)
library(dplyr)
df <- mtcars
filter(df, mg>20)
filter(df, mpg>20)
result <- arrange(sample_n(filter(df, mpg>20), size = 5), desc(mpg))
print(result)
a <- filter(df, mpg>20)
b <- sample_n(a, size = 5)
result <- arrange(b, desc(mpg))
print(result)
source("~/Desktop/github R course/7. Data_manipulation.R", echo=TRUE)
library(dplyr)
head(mtcars)
df %>% filter(mpg > 20, cyl > 6)
result <- df %>% filter(mpg > 20, cyl > 6)
rsult
result
head(filter(mtcars, mpg > 20, cyl > 6))
head(filter(mtcars, mpg > 20, cyl == 6))
head(arrange(mtcars, cyl, desc(wt)))
head(select(mtcars, mpg, cyl))
head(distinct(mtcars, gear))
head(mutate(mtcars, performance = hp / wt))
summarise(mtcars, mean_mpg = mean(mpg, na.rm = T))
result <- mtcars %>% filter(cyl == 6) %>% summarise(mean(cyl))
result
result <- mtcars %>% filter(cyl == 6) %>% (mean(cyl))
result <- mtcars %>% select(cyl == 6)
result <- mtcars %>% filter(cyl == 6)
result
result <- mtcars %>% filter(cyl == 6) %>% summarise(mean(filer))
result <- mtcars %>% filter(cyl == 6) %>% summarise(mean(filter))
result <- mtcars %>% filter(cyl == 6) %>% summarise(mean(cyl))
result
source("~/Desktop/github R course/7. Data_manipulation.R", echo=TRUE)
source("~/Desktop/github R course/7. Data_manipulation.R", echo=TRUE)
install.packages('tidyr')
install.packages('data.table')
library(tidyr)
library(data.table)
source("~/Desktop/github R course/7. Data_manipulation.R", echo=TRUE)
df
gather(df, Quarter, Revenue, Qtr1:Qtr4)
help(gather)
df %>% gather(Quarter, Revenue, Qtr1 : Qtr4)
source("~/Desktop/github R course/7. Data_manipulation.R", echo=TRUE)
source("~/Desktop/github R course/7. Data_manipulation.R", echo=TRUE)
stocks <- data.frame(
time = as.Date('2009-01-01') + 0:9,
X = rnorm(10, 0, 1),
Y = rnorm(10, 0, 2),
Z = rnorm(10, 0, 4)
)
stocks
head(stocks)
stocks.gathered <- stocks %>% gather(stock, price, x:z)
stocks.gathered <- stocks %>% gather(stock, price, X:Z)
stocks.gathered <- stocks %>% gather(stock, price, X, Y, Z)
heaad(stocks.gathered)
head(stocks.gathered)
stocks.gathered %>% spread(stock.price)
stocks.gathered %>% spread(stock, price)
spread(stocks.gathered, stock, price)
spread(stocks.gathered, time, price)
spread(stocks.gathered, time, price)
df <- data.frame(new.col = c(NA, 'a.x', 'b.y', 'c.z'))
new.col
df <- data.frame(new.col = c(NA, 'a.x', 'b.y', 'c.z'))
new.col
View(df)
df
separate(df, new.col, c('ABC', 'XYZ'))
df <- data.frame(new.col = c(NA, 'a-x', 'b-y', 'c-z'))
df
separate(data = df, col = new.col, into = c('abc', 'xyz'), sep = '-')
df.sep <- separate(data = df, col = new.col, into = c('abc', 'xyz'))
df.sep
unite(df.sep, new.joined.col, abc, xyz)
unite(df.sep, new.joined.col, abc, xyz, sep = '---')
rm(list = ls())
library(ggplot2)
pl <- ggplot(data = mtcars, aer(x = mpg, y = hp))
pl <- ggplot(data = mtcars, aes(x = mpg, y = hp))
pl + geom_point()
pl + facet_grid(cyl X .)
pl + facet_grid(cyl x .)
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
installed.packages(ggplot2)
installed.packages('ggplot2')
install.packages('ggplot2/movies')
install.packages('ggplot2movies')
colnames(movies)
library(ggplot2movies)
colnames(movies)
head(movies)
library(ggplot2)
library(ggplot2movies)
colnames(movies)
# DATA & AESTHETICS
pl <- ggplot(movies, aes(x = rating))
# GEOMETRIES
pl + geom_histogram()
# ggplot2 -- adding layers together -- to the visualization: data, aesthetics, geometries, facets, statistics, coordinates, theme
# aes -- which columns/features to plot out
# facet -- multiple plots on a single canvas
# coordinates -- to smooth out the plot
# HISTROGRAMS
library(ggplot2)
library(ggplot2movies)
colnames(movies)
# DATA & AESTHETICS
pl <- ggplot(movies, aes(x = rating))
# GEOMETRIES
print(pl + geom_histogram())
source("~/Desktop/github R course/8. Data_visualization.R", echo=TRUE)
library(ggplot2)
library(ggplot2movies)
colnames(movies)
# DATA & AESTHETICS
pl <- ggplot(movies, aes(x = rating))
# GEOMETRIES
print(pl + geom_histogram(binwidth = 0.1))
# DATA & AESTHETICS
pl <- ggplot(movies, aes(x = rating))
# GEOMETRIES
print(pl + geom_histogram(binwidth = 0.1, color = 'red'))
# GEOMETRIES
print(pl + geom_histogram(binwidth = 0.1, color = 'red', fill = 'pink'))
# GEOMETRIES
print(pl + geom_histogram(binwidth = 0.1, color = 'red', fill = 'pink', alpha = 0))
# GEOMETRIES
print(pl + geom_histogram(binwidth = 0.1, color = 'red', fill = 'pink', alpha = ))
# GEOMETRIES
print(pl + geom_histogram(binwidth = 0.1, color = 'red', fill = 'pink', alpha = 1))
# GEOMETRIES
print(pl + geom_histogram(binwidth = 0.1, color = 'red', fill = 'pink', alpha = 0.4))
library(ggplot2)
library(ggplot2movies)
colnames(movies)
# DATA & AESTHETICS
pl <- ggplot(movies, aes(x = rating))
# GEOMETRIES
print(pl + geom_histogram(binwidth = 0.1, color = 'red', fill = 'pink', alpha = 0.4))
library(ggplot2)
library(ggplot2movies)
colnames(movies)
# DATA & AESTHETICS
pl <- ggplot(movies, aes(x = rating))
# GEOMETRIES
print(pl + geom_histogram(binwidth = 0.1, color = 'red', fill = 'pink', alpha = 0.4))
source("~/Desktop/github R course/8. Data_visualization.R", echo=TRUE)
library(ggplot2movies)
# ggplot2 -- adding layers together -- to the visualization: data, aesthetics, geometries, facets, statistics, coordinates, theme
# aes -- which columns/features to plot out
# facet -- multiple plots on a single canvas
# coordinates -- to smooth out the plot
# HISTROGRAMS
library(ggplot2)
library(ggplot2movies)
colnames(movies)
# DATA & AESTHETICS
pl <- ggplot(movies, aes(x = rating))
# GEOMETRIES
pl2 <- pl + geom_histogram(binwidth = 0.1, color = 'red', fill = 'pink', alpha = 0.4)
pl3 <- pl2 + xlab('Movie Rating') + ylab('Count')
print(pl3)
# alpha for transparecy
# alpha for transparency
# ggplot2 -- adding layers together -- to the visualization: data, aesthetics, geometries, facets, statistics, coordinates, theme
# aes -- which columns/features to plot out
# facet -- multiple plots on a single canvas
# coordinates -- to smooth out the plot
# HISTROGRAMS
library(ggplot2)
library(ggplot2movies)
colnames(movies)
# DATA & AESTHETICS
pl <- ggplot(movies, aes(x = rating))
# GEOMETRIES
pl2 <- pl + geom_histogram(binwidth = 0.1, color = 'red', fill = 'pink', alpha = 0.4)
pl3 <- pl2 + xlab('Movie Rating') + ylab('Count')
print(pl3 + ggtitle("My Title"))
# alpha for transparency
# alpha for transparency
# alpha for transparency
# alpha for transparency
# ggplot2 -- adding layers together -- to the visualization: data, aesthetics, geometries, facets, statistics, coordinates, theme
# aes -- which columns/features to plot out
# facet -- multiple plots on a single canvas
# coordinates -- to smooth out the plot
# HISTROGRAMS
library(ggplot2)
library(ggplot2movies)
colnames(movies)
# DATA & AESTHETICS
pl <- ggplot(movies, aes(x = rating))
# GEOMETRIES
pl2 <- pl + geom_histogram(binwidth = 0.1, color = 'red', fill = 'pink', alpha = 0.4)
pl3 <- pl2 + xlab('Movie Rating') + ylab('Count')
print(pl3 + ggtitle("My Title"))
# alpha for transparency
source("~/Desktop/github R course/8. Data_visualization.R", echo=TRUE)
source("~/Desktop/github R course/8. Data_visualization.R", echo=TRUE)
df <- mtcars
df <- mtcars
# DATA AND AESTHETICS
pl <- ggplot(data = df, aes(x = wt, y = mpg))
# GEOMETRY
print(pl + geom_point())
df <- mtcars
# DATA AND AESTHETICS
pl <- ggplot(data = df, aes(x = wt, y = mpg))
# GEOMETRY
print(pl + geom_point(size = 5))
source("~/Desktop/github R course/8. Data_visualization.R", echo=TRUE)
df <- mtcars
# DATA AND AESTHETICS
pl <- ggplot(data = df, aes(x = wt, y = mpg))
# GEOMETRY
# print(pl + geom_point(alpha = 0.5, size = 5))
print(pl + geom_point(aes(size = hp)))
df <- mtcars
# DATA AND AESTHETICS
pl <- ggplot(data = df, aes(x = wt, y = mpg))
# GEOMETRY
# print(pl + geom_point(alpha = 0.5, size = 5))
# size of the scatterplot points grow bigger as the hp values increase:
# print(pl + geom_point(aes(size = hp)))
print(pl + geom_point(aes(size = cyl)))
source("~/Desktop/github R course/8. Data_visualization.R", echo=TRUE)
df <- mtcars
# DATA AND AESTHETICS
pl <- ggplot(data = df, aes(x = wt, y = mpg))
# GEOMETRY
# print(pl + geom_point(alpha = 0.5, size = 5))
# size of the scatterplot points grow bigger as the hp values increase:
# print(pl + geom_point(aes(size = hp)))
print(pl + geom_point(aes(size = factor(cyl))))
source("~/Desktop/github R course/8. Data_visualization.R", echo=TRUE)
source("~/Desktop/github R course/8. Data_visualization.R", echo=TRUE)
source("~/Desktop/github R course/8. Data_visualization.R", echo=TRUE)
source("~/Desktop/github R course/8. Data_visualization.R", echo=TRUE)
df <- mtcars
pl <- ggplot(df, aes(x = wt, y = mpg))
pl2 <- pl + geom_point(size = 5, color = '#43e8d8')
print(pl2)
source("~/Desktop/github R course/8. Data_visualization.R", echo=TRUE)
source("~/Desktop/github R course/8. Data_visualization.R", echo=TRUE)
source("~/Desktop/github R course/8. Data_visualization.R", echo=TRUE)
library(ggplot2)
df <- mpg
head(mpg)
source("~/Desktop/github R course/8. Data_visualization.R", echo=TRUE)
library(ggplot2)
df <- mpg
pl <- ggplot(df, aes(x = class))
print(pl + geom_bar(color = 'blue'))
library(ggplot2)
df <- mpg
pl <- ggplot(df, aes(x = class))
print(pl + geom_bar(color = 'blue', fill = 'blue'))
source("~/Desktop/github R course/8. Data_visualization.R", echo=TRUE)
source("~/Desktop/github R course/8. Data_visualization.R", echo=TRUE)
head(mtcars)
source("~/Desktop/github R course/8. Data_visualization.R", echo=TRUE)
source("~/Desktop/github R course/8. Data_visualization.R", echo=TRUE)
df <- mtcars
pl <- ggplot(df, aes(x = factor(cyl), y = mpg))
print(pl + geom_boxplot() + coord_filp())
source("~/Desktop/github R course/8. Data_visualization.R", echo=TRUE)
df <- mtcars
pl <- ggplot(df, aes(x = factor(cyl), y = mpg))
print(pl + geom_boxplot() + coord_flip())
print(pl + geom_boxplot(aes(fill = factor(cyl))))
source("~/Desktop/github R course/8. Data_visualization.R", echo=TRUE)
source("~/Desktop/github R course/8. Data_visualization.R", echo=TRUE)
source("~/Desktop/github R course/8. Data_visualization.R", echo=TRUE)
library(ggplot2)
library(ggplot2movies)
pl<- ggplot(movies, aes(x = year, y = rating))
pl2 <- pl + geom_bin2d()
pl3 <- pl2 + scale_fill_gradient(high = 'red', low = 'green') # 2D bin chart
print(pl3)
library(ggplot2)
library(ggplot2movies)
pl<- ggplot(movies, aes(x = year, y = rating))
pl2 <- pl + geom_bin2d(binwidth = c(3, 1))
pl3 <- pl2 + scale_fill_gradient(high = 'red', low = 'green') # 2D bin chart
print(pl3)
source("~/Desktop/github R course/8. Data_visualization.R", echo=TRUE)
library(ggplot2)
library(ggplot2movies)
pl<- ggplot(movies, aes(x = year, y = rating))
pl2 <- pl + geom_hex()
pl3 <- pl2 + scale_fill_gradient(high = 'red', low = 'blue') # 2D bin chart
print(pl3)
library(ggplot2)
library(ggplot2movies)
pl<- ggplot(movies, aes(x = year, y = rating))
pl2 <- pl + geom_density2d()
print(pl2)
source("~/Desktop/github R course/8. Data_visualization.R", echo=TRUE)
library(ggplot2)
pl <- ggplot(mpg, aes(x = displ, y = hwy)) + geom_point()
print(pl)
source("~/Desktop/github R course/8. Data_visualization.R", echo=TRUE)
pl <- ggplot(mpg, aes(x = displ, y = hwy)) + geom_point()
pl2 <- pl + coord_cartesian(xlim = c(1, 4), ylim = c(15, 30))
# set aspect ratios
pl2 <- pl + coord_fixed(ratio = 1/3)
print(pl2)
help("facet_grid")
library(ggplot2)
pl <- ggplot(mpg, aes(x = displ, y = hwy)) + geom_point()
print(pl)
library(ggplot2)
pl <- ggplot(mpg, aes(x = displ, y = hwy)) + geom_point()
print(pl)
head(mpg)
library(ggplot2)
pl <- ggplot(mpg, aes(x = displ, y = hwy)) + geom_point()
print(pl + facet_grid(. ~ cyl))
source("~/Desktop/github R course/8. Data_visualization.R", echo=TRUE)
library(ggplot2)
pl <- ggplot(mpg, aes(x = displ, y = hwy)) + geom_point()
# facet grid syntax: . represents anything else
print(pl + facet_grid(. ~ cyl))
print(pl + facet_grid(drv ~ cyl))
source("~/Desktop/github R course/8. Data_visualization.R", echo=TRUE)
source("~/Desktop/github R course/8. Data_visualization.R", echo=TRUE)
install.packages('ggthemes')
source("~/Desktop/github R course/8. Data_visualization.R", echo=TRUE)
source("~/Desktop/github R course/8. Data_visualization.R", echo=TRUE)
library(ggplot2)
library(ggthemes)
# theme_set(theme_minimal()) # set the theme for all the plots
pl <- ggplot(mtcars, aes(x = wt, y = mpg)) + geom_point()
print(pl + theme_fivethirtyeight())
source("~/Desktop/github R course/8. Data_visualization.R", echo=TRUE)
library(ggplot2)
#library(ggthemes)
head(mpg)
source("~/Desktop/github R course/8. Data_visualization.R", echo=TRUE)
library(ggplot2)
library(ggthemes)
colnames(mpg)
pl <- ggplot(mpg, aes(x = hwy))
pl2 <- pl + geom_histogram(binwidth = 0.1, color = 'pink', fill = 'pink', alpha = 0.4)
pl2
pl2 <- pl + geom_histogram(color = 'pink', fill = 'pink', alpha = 0.4)
pl2
pl2 <- pl + geom_histogram(color = 'pink', fill = 'pink', alpha = 0.2)
pl2
pl2 <- pl + geom_histogram(binwidth = 0.3, color = 'pink', fill = 'pink', alpha = 0.2)
pl2
pl2 <- pl + geom_histogram(binwidth = 20, color = 'pink', fill = 'pink', alpha = 0.7)
pl2
pl2 <- pl + geom_histogram(binwidth = 1, color = 'pink', fill = 'pink', alpha = 0.7)
pl2
pl2 <- pl + geom_histogram(binwidth = 1.2, color = 'pink', fill = 'pink', alpha = 0.7)
pl2
pl2 <- pl + geom_histogram(binwidth = 2, color = 'pink', fill = 'pink', alpha = 0.7)
pl2
df <- mpg
pl <- ggplot(df, aes(x = manufacturer))
pl <- ggplot(mpg, aes(x = factor(cyl)))
pl
pl <- ggplot(df, aes(x = manufacturer))
pl + geom_bar(aes(fill = factor(cyl), position = 'dodge'))
head(txhousing)
pl <- ggplot(txhousing, aes(x = sales, y = volume))
pl + geom_point(alpha = 0.5, size = 5)
pl + geom_point(alpha = 0.5, size = 2)
pl + geom_point(alpha = 0.5, size = 1)
pl + geom_point(alpha = 0.5, size = 1, color = 'blue')
pl + geom_point(alpha = 0.5, size = 1., color = 'blue')
pl + geom_point(alpha = 0.5, size = 1.5, color = 'blue')
help("geom_smooth")
pl2 <- pl + geom_point(alpha = 0.5, size = 1.5, color = 'blue')
pl2 + geom_smooth(lm)
rlang::last_trace()
pl2 + geom_smooth(method = lm)
pl2 + geom_smooth(method = "loess", se = FALSE)
pl2 + geom_smooth(method = "loess", se = T)
pl2 + geom_smooth(method = "loess", se = T)
pl2 + geom_smooth(method = "loess")
source("~/Desktop/github R course/8. Data_visualization.R", echo=TRUE)
source("~/Desktop/github R course/8. Data_visualization.R", echo=TRUE)
library(ggplot2)
library(ggthemes)
head(mpg)
# histogram -- frequency count
pl <- ggplot(mpg, aes(x = hwy))
pl2 <- pl + geom_histogram(bins = 20, color = 'pink', fill = 'pink', alpha = 0.7)
print(pl2)
library(ggplot2)
library(ggthemes)
head(mpg)
# histogram -- frequency count
pl <- ggplot(mpg, aes(x = hwy))
pl2 <- pl + geom_histogram(bins = 20, color = 'pink', fill = 'pink', alpha = 0.5)
print(pl2)
library(ggplot2)
library(ggthemes)
pl <- ggplot(df, aes(x = manufacturer))
pl2 <- pl + geom_bar(aes(fill = factor(cyl)))
print(pl2)
pl <- ggplot(mpg, aes(x = manufacturer))
pl2 <- pl + geom_bar(aes(fill = factor(cyl)))
print(pl2)
pl <- ggplot(txhousing, aes(x = sales, y = volume))
pl2 <- pl + geom_point(alpha = 0.5, size = 1.5, color = 'blue')
print(pl2)
pl3 <- pl2 + geom_smooth(color = 'red', method = "loess")
pl3
library(ggplot2)
df <- read.csv('Economist_Assignment_Data.csv')
source("~/Desktop/projects/Data_viz_the_Economist.R", echo=TRUE)
source("~/Desktop/projects/Data_viz_the_Economist.R", echo=TRUE)
source("~/Desktop/projects/Data_viz_the_Economist.R", echo=TRUE)
source("~/Desktop/projects/Data_viz_the_Economist.R", echo=TRUE)
cd
pwd
source("~/Desktop/projects/Data_viz_the_Economist.R", echo=TRUE)
source("~/Desktop/projects/Data_viz_the_Economist.R", echo=TRUE)
source("~/Desktop/projects/Data_viz_the_Economist.R", echo=TRUE)
source("~/Desktop/projects/Data_viz_the_Economist.R", echo=TRUE)
source("~/Desktop/projects/Data_viz_the_Economist.R", echo=TRUE)
source("~/Desktop/projects/Data_viz_the_Economist.R", echo=TRUE)
source("~/Desktop/projects/Data_viz_the_Economist.R", echo=TRUE)
source("~/Desktop/projects/Data_viz_the_Economist.R", echo=TRUE)
source("~/Desktop/projects/Data_viz_the_Economist.R", echo=TRUE)
source("~/Desktop/projects/Data_viz_the_Economist.R", echo=TRUE)
help(shape)
source("~/Desktop/projects/Data_viz_the_Economist.R", echo=TRUE)
source("~/Desktop/projects/Data_viz_the_Economist.R", echo=TRUE)
source("~/Desktop/projects/Data_viz_the_Economist.R", echo=TRUE)
source("~/Desktop/projects/Data_viz_the_Economist.R", echo=TRUE)
source("~/Desktop/projects/Data_viz_the_Economist.R", echo=TRUE)
source("~/Desktop/projects/Data_viz_the_Economist.R", echo=TRUE)
source("~/Desktop/projects/Data_viz_the_Economist.R", echo=TRUE)
source("~/Desktop/projects/Data_viz_the_Economist.R", echo=TRUE)
source("~/Desktop/projects/Data_viz_the_Economist.R", echo=TRUE)
source("~/Desktop/projects/Data_viz_the_Economist.R", echo=TRUE)
source("~/Desktop/projects/Data_viz_the_Economist.R", echo=TRUE)
source("~/Desktop/projects/Data_viz_the_Economist.R", echo=TRUE)
source("~/Desktop/projects/Data_viz_the_Economist.R", echo=TRUE)
source("~/Desktop/projects/Data_viz_the_Economist.R", echo=TRUE)
source("~/Desktop/projects/Data_viz_the_Economist.R", echo=TRUE)
source("~/Desktop/projects/Data_viz_the_Economist.R", echo=TRUE)
source("~/Desktop/projects/Data_viz_the_Economist.R", echo=TRUE)
source("~/Desktop/projects/Data_viz_the_Economist.R", echo=TRUE)
source("~/Desktop/projects/Data_viz_the_Economist.R", echo=TRUE)
source("~/Desktop/projects/Data_viz_the_Economist.R", echo=TRUE)
source("~/Desktop/projects/Data_viz_the_Economist.R", echo=TRUE)
source("~/Desktop/projects/Data_viz_the_Economist.R", echo=TRUE)
source("~/Desktop/projects/Data_viz_the_Economist.R")
source("~/Desktop/projects/Data_viz_the_Economist.R")
source("~/Desktop/projects/Project_Data_viz_the_Economist.R", echo=TRUE)
source("~/Desktop/projects/Project_Data_viz_the_Economist.R")
install.packages('plotly')
source("~/Desktop/github R course/8. Data_visualization.R", echo=TRUE)
library(ggplot2)
library(plotly)
pl <- ggplot(mtcars, aes(mpg, wt)) + geom_point()
print(pl)
library(ggplot2)
library(plotly)
pl <- ggplot(mtcars, aes(mpg, wt)) + geom_point()
gpl <- ggplotly(pl) # convert the ggplot into a ggplotly
print(gpl)
install.packages("gitignore")
